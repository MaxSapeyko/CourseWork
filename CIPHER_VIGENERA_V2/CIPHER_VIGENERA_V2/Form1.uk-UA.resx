<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button4.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        IZoAAAAASUVORK5CYII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwAAAB8AAAAeAAAAHwAA
        AA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAGwAAAB8AAAAfAAAAGwAAAAQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwAAAA5AAA
        AOAAAADiAAAAbwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABsAAADEAAAA4QAAAOMAAADGAAAAGwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AHAAAADkAAAA8AAAAP8AAAB/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHwAAAOEAAAD+AAAA5gAA
        AMYAAAAbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAADQAAABoAAACKAAAA/wAAAH0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdAAAA4AAA
        AOUAAAA4AAAAFwAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFQAA
        ACAAAAAfAAAAHwAAAB8AAAAeAAAAGgAAAIsAAAD/AAAAjgAAABwAAAAfAAAAHwAAAB8AAAAfAAAAHQAA
        ADoAAADlAAAA5QAAADgAAAAcAAAAHwAAAB8AAAAfAAAAIAAAABUAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AAAAAAAAAAAAAAAAAAAAAAAaAAAAzQAAAP8AAADIAAAAtwAAANsAAADbAAAAtwAAAMgAAAD/AAAAzQAA
        ABoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABeAAAA+wAAANMAAAAqAAAAGAAAABgAAAApAAAA0wAA
        APsAAABeAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAACyAAAA/wAAAIgAAAAAAAAAAAAA
        AIgAAAD/AAAAsgAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD8AAADtAAAA6gAA
        ADUAAAA1AAAA6gAAAO0AAAA/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAHgAA
        AKoAAAD/AAAAsAAAALAAAAD/AAAAqgAAAB4AAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ABsAAADFAAAA7gAAAP8AAAD8AAAA/AAAAP8AAADuAAAAxQAAABwAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAGwAAAMYAAADmAAAA+gAAAP4AAAD+AAAA+gAAAOYAAADGAAAAGwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAEAAAAGQAAADoAAADjAAAA/wAAAP8AAADjAAAAOgAAABkAAAAEAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHQAAAN8AAAD/AAAA/wAAAN8AAAAdAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfAAAA4QAAAP8AAAD/AAAA4QAA
        AB8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABsAAADEAAAA4QAA
        AOEAAADEAAAAGwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAA
        ABsAAAAfAAAAHwAAABsAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/APAP/wDwD/8A8A//APAP4AAAAGAAAABgAAAAYAAAAHAAAADwAAAA4AA
        AAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAAB/gAAf/8AAP//gAH//4AB///AA///wAP//8AD///A
        A///wAP//8AD///wD///8A////AP///wD/8=
</value>
  </data>
</root>